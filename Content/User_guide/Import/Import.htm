<?xml version="1.0" encoding="utf-8"?>
<html lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="BookTemplate" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title></title>
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/Breadcrumbs.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Gemalto_Template.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <h1 class="chapter"><a name="top"></a>Importing Content</h1>
        <p>You may have been creating documentation in other applications, such as Microsoft Word or Adobe FrameMaker, but are now ready to migrate your documents  to Flare. Madcap wants you to migrate, and provides pretty good  wizards to help you import the content from your legacy documents into a Flare project. Since FrameMaker import is relatively straightforward and similar to Word import, this chapter covers importing Word documents only (see <MadCap:xref href="Word.htm">Importing MS Word Documents</MadCap:xref>). Importing is covered in detail in the Flare documentation, although much of the information does not apply when importing to the Gemalto Flare template.</p>
        <p>When you import a legacy document into a Flare project,  you import only the <b>content</b> and the <b>structure</b> of the original document (along with some local formatting, such as bolded text). All of the formatting elements (paragraph and character styles, headers and footers, cover page and frontmatter, and some old boilerplate text) are left behind and replaced by formatting elements in the Flare template (CSS, page layouts, TOCs, etc.) Some formatting elements, like paragraph and character styles, are mapped to the Flare styles on import. Other formatting elements, such as page layouts, you configure after importing the content. Graphics and other non-text content comes through cleanly.</p>
        <p class="tip" MadCap:autonum="&lt;span style=&quot;color: #b90b67;&quot; class=&quot;mcFormatColor&quot;&gt; &lt;b&gt;TIP&lt;/b&gt; &#160;&#160;&lt;/span&gt;">It is far easier to clean up the source prior to import than it is to clean it up in Flare after import. Although you may be tempted to jump right in, planning how you import the content so that it works when delivered as individual topics has a major impact on the useability and maintainability of the documentation once in Flare. If you are new to Flare, read the entire Gemalto <i>Flare Template User Guide</i> to familiarize yourself with Gemalto's Flare implementation before proceeding.</p>
        <h2><a name="Topic-Ba"></a>Topic-Based Authoring</h2>
        <p>When you import your single-file Word document, or several-chapter FrameMaker document into Flare, it's going to be "chunked" into multiple individual HTML files, or topics. You can configure how the document is broken into topics by specifying which heading levels will mark the start of a new topic. Typically, you would create topics for h1 and h2 headings, such that h1 topics would contain the h1 and all text up the next h1 or h2, and h2 topics would contain the h2 and all text up to the next h1 or h2.</p>
        <p> In Flare, the topics are threaded together using a TOC, which is separate file that defines the order and structure of the document. The import process creates a default TOC with a flat file structure that retains the order of the original document, but not its structure (ie chapters, page layouts, hierarchy). The same is true for the topics - you get a folder full of topics named using the heading they were created from. There is no arranging of the chapters into folders or any other sort of organization. You will need to organize both the content and TOC of each imported document. In addition, once the topics are imported, you are free to change their contents and structure as required, including the heading level associated with the file when it was imported. </p>
        <h3>Chunking Strategy</h3>
        <p>Probably the biggest mistake you can make when importing a Word document into Flare is to create too many files. When chunking your information, think about the context of the individual chunks. They should be able to stand alone, such that the reader, and the author, don't require the context of the topics that are above it or below it in the TOC to understand the context of the topic they are currently viewing or editing. This serves a dual purpose:</p>
        <p class="ul1" MadCap:autonum="&lt;b&gt;&amp;gt;&lt;/b&gt;"> For the author, this allows you to maintain all of the information required to perform a task in a single file so that you do not need the TOC. For example, place all of the conceptual information for a chapter into a single file (the h1 topic), and the overview and step-by-step procedures for each task in the chapter in its own h2 topic.</p>
        <p class="ul1" MadCap:autonum="&lt;b&gt;&amp;gt;&lt;/b&gt;">For the reader, this allows them to quickly "drill down"&#160;through the documentation to find the information they need. If they are a new user needing conceptual information, they read the h1 chapter topic. If they understand the concepts and just want to perform a specific task, they'll go directly to the task, which provides an overview of the task, who can preform the task and what they need, and step-by-step procedures for performing the task.</p>
        <h3>Chunking Methodology</h3>
        <p>When you import a document, you specify how it is chunked based on the heading levels in the source document. Since the headings in the source document may not necessary reflect how you want to structure your individual topic files in Flare, you may need to do some retagging to able to generate standalone topics that contain  the information you want.</p>
        <p> For example, you may want to combine an h1 section, that provides a series of cross-references to the chapter contents, with the conceptual information in the first two h2 sections of a chapter to create a single overview topic. To do this, you can temporarily retag the h2 sections that you want to embed in the h1 topic to h3, or anything you like, so that they do not get split into separate topics on import. Once the import is complete, you can retag them in Flare. This is much faster than moving the content around once it is in Flare, since once the content is in Flare, it is part of a database. This database maintains a list of the links between all of the files in the project (cross-references, TOC entries, stylesheets, etc). This means that every time you move/rename/delete content, Flare needs to update its database, and ask you for confirmation before it does. This can be time-consuming.</p>
    </body>
</html>